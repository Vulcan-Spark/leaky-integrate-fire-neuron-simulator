# -*- coding: utf-8 -*-
"""lif_neuron.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1VlhuCQaT5sVNUIbH5Js9bQWTKuUzflPT
"""

import numpy as np
import matplotlib.pyplot as plt

# Simulation parameters
time = np.arange(0, 100, 0.1)  # time from 0 to 100 ms in 0.1 ms steps
dt = 0.1                       # time step
tau = 20                       # membrane time constant (ms)
R = 1                          # membrane resistance (MÎ©)
V_th = -50                    # spike threshold (mV)
V_reset = -65                 # reset potential (mV)
V_rest = -65                  # resting potential (mV)
I_ext = 1.5                   # external input current (nA)

# Initialize membrane potential
V = np.zeros_like(time)
V[0] = V_rest

# Simulation loop
for t in range(1, len(time)):
    dV = (-(V[t-1] - V_rest) + R * I_ext) * (dt / tau)
    V[t] = V[t-1] + dV
    if V[t] >= V_th:
        V[t-1] = 50   # spike!
        V[t] = V_reset

# Plot the result
plt.figure(figsize=(10, 4))
plt.plot(time, V, label='Membrane Potential')
plt.axhline(V_th, color='r', linestyle='--', label='Threshold')
plt.title('Leaky Integrate-and-Fire Neuron Simulation')
plt.xlabel('Time (ms)')
plt.ylabel('Membrane Potential (mV)')
plt.legend()
plt.grid(True)
plt.tight_layout()
plt.show()